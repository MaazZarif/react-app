{"ast":null,"code":"var _jsxFileName = \"E:\\\\react1\\\\my-app\\\\src\\\\components'\\\\Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n  const handleUpclick = () => {\n    console.log(\"uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleonchange = event => {\n    console.log(\"on change\");\n    setText(event.target.value);\n  };\n  const [mystyle, setmystyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\"\n  });\n  const [text, setText] = useState(\"Enter Text Here\");\n  const [btntext, setbtntext] = useState(\"Enable Dark Mode\");\n  const togglestyle = () => {\n    if (mystyle.color === \"black\") {\n      setmystyle({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"1px solid white\"\n      });\n      setbtntext(\"Enable Light Mode\");\n    } else {\n      setmystyle({\n        color: \"black\",\n        backgroundColor: \"White\"\n      });\n      setbtntext(\"Enable Dark Mode\");\n    }\n  };\n\n  // to change text \n  // setText(\"new text\") \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: mystyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: mystyle,\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        style: mystyle,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: mystyle,\n          className: \"form-control\",\n          value: text,\n          onChange: handleonchange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary \",\n        onClick: handleUpclick,\n        children: \"Convert to uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: togglestyle,\n        children: btntext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"you will take approx \", 0.008 * text.split(\" \").length, \" minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Textform, \"ZkHzW6o07rsLlHWy7QOnH6a2KFY=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Textform","props","_s","handleUpclick","console","log","text","newText","toUpperCase","setText","handleonchange","event","target","value","mystyle","setmystyle","color","backgroundColor","btntext","setbtntext","togglestyle","border","children","className","style","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["E:/react1/my-app/src/components'/Textform.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpclick = () => {\r\n        console.log(\"uppercase was clicked\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleonchange = (event) => {\r\n        console.log(\"on change\")\r\n        setText(event.target.value)\r\n    }\r\n    const [mystyle, setmystyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    })\r\n    const [text, setText] = useState(\"Enter Text Here\")\r\n    const [btntext, setbtntext] = useState(\"Enable Dark Mode\")\r\n\r\n    const togglestyle = () => {\r\n        if (mystyle.color === \"black\") {\r\n            setmystyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\",\r\n                border: \"1px solid white\"\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n        else {\r\n            setmystyle({\r\n                color: \"black\",\r\n                backgroundColor: \"White\"\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    // to change text \r\n    // setText(\"new text\") \r\n    return (\r\n        <>\r\n            <div className='container' style={mystyle}>\r\n                <h1 style={mystyle}>{props.heading}</h1>\r\n                <div className=\"mb-3\" style={mystyle}>\r\n                    <textarea style={mystyle} className=\"form-control\" value={text} onChange={handleonchange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary \" onClick={handleUpclick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary\" onClick={togglestyle}>{btntext}</button>\r\n\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>you will take approx {0.008 * text.split(\" \").length} minutes to read</p>\r\n            </div>\r\n            <h1>Preview</h1>\r\n            <p>{text}</p>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGC,IAAI,CAAC;IAC3C,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACF,OAAO,CAAC;EACpB,CAAC;EACD,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAC9BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC;IACnCqB,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE;EACrB,CAAC,CAAC;EACF,MAAM,CAACX,IAAI,EAAEG,OAAO,CAAC,GAAGd,QAAQ,CAAC,iBAAiB,CAAC;EACnD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,kBAAkB,CAAC;EAE1D,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIN,OAAO,CAACE,KAAK,KAAK,OAAO,EAAE;MAC3BD,UAAU,CAAC;QACPC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE,OAAO;QACxBI,MAAM,EAAE;MACZ,CAAC,CAAC;MACFF,UAAU,CAAC,mBAAmB,CAAC;IACnC,CAAC,MACI;MACDJ,UAAU,CAAC;QACPC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE;MACrB,CAAC,CAAC;MACFE,UAAU,CAAC,kBAAkB,CAAC;IAClC;EACJ,CAAC;;EAED;EACA;EACA,oBACItB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAACC,KAAK,EAAEV,OAAQ;MAAAQ,QAAA,gBACtCzB,OAAA;QAAI2B,KAAK,EAAEV,OAAQ;QAAAQ,QAAA,EAAErB,KAAK,CAACwB;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxChC,OAAA;QAAK0B,SAAS,EAAC,MAAM;QAACC,KAAK,EAAEV,OAAQ;QAAAQ,QAAA,eACjCzB,OAAA;UAAU2B,KAAK,EAAEV,OAAQ;UAACS,SAAS,EAAC,cAAc;UAACV,KAAK,EAAEP,IAAK;UAACwB,QAAQ,EAAEpB,cAAe;UAACqB,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC,eACNhC,OAAA;QAAQ0B,SAAS,EAAC,kBAAkB;QAACU,OAAO,EAAE9B,aAAc;QAAAmB,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1FhC,OAAA;QAAQ0B,SAAS,EAAC,iBAAiB;QAACU,OAAO,EAAEb,WAAY;QAAAE,QAAA,EAAEJ;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG3E,CAAC,eACNhC,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBzB,OAAA;QAAAyB,QAAA,EAAI;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhC,OAAA;QAAAyB,QAAA,GAAIhB,IAAI,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAAC7B,IAAI,CAAC6B,MAAM,EAAC,aAAW;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClEhC,OAAA;QAAAyB,QAAA,GAAG,uBAAqB,EAAC,KAAK,GAAGhB,IAAI,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,kBAAgB;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACNhC,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhC,OAAA;MAAAyB,QAAA,EAAIhB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACf,CAAC;AAEX;AAAC3B,EAAA,CA1DuBF,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}