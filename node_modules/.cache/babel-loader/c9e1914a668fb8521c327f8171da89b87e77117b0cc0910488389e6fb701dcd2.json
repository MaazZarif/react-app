{"ast":null,"code":"var _jsxFileName = \"E:\\\\react1\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components\\'/Navbar';\nimport Textform from './components\\'/Textform';\nimport Alert from './components\\'/Alert';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"maaz\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"Enter the text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Z/xej/1a2AEisYTYJsRdYq5oPG4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","Alert","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","togglemode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["E:/react1/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components\\'/Navbar';\nimport Textform from './components\\'/Textform';\nimport Alert from './components\\'/Alert';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      document.body.style.backgroundColor = \"#042743\"\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = \"white\"\n\n    }\n\n  }\n  return (\n    <>\n      {/* <Navbar title=\"maaz\" abouttext=\"about text utils\" /> */}\n      <Navbar title='maaz' mode={mode} togglemode={togglemode} />\n      <Alert />\n      <div className=\"container\">\n        <Textform heading=\"Enter the text to analyze\" mode={mode} />\n      </div>\n    </>\n\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IACjD,CAAC,MACI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAE/C;EAEF,CAAC;EACD,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEEZ,OAAA,CAACN,MAAM;MAACmB,KAAK,EAAC,MAAM;MAACR,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DjB,OAAA,CAACJ,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAN,QAAA,eACxBZ,OAAA,CAACL,QAAQ;QAACwB,OAAO,EAAC,2BAA2B;QAACd,IAAI,EAAEA;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA,eACN,CAAC;AAGP;AAACb,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}